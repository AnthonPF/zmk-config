/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_spanish.h"


#define DEF 0
#define LOW 1
#define RAI 2
#define ADJ 3

#define XXXXX &none
#define _____ &trans

/ {
    macros {
        barra_vertical: barra_vertical {
            label = "barra_vertical";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_N1 &kp KP_N2 &kp KP_N4>
            , <&macro_release &kp LALT>
            ;
            
        };
    };
};



/ {
        
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOW RAI>;
            then-layer = <ADJ>;
        };
    };



        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "DEF";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '  |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHIFT |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp APOS
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LGUI &mo 1 &kp RET   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
                        label = "LOW";
// -----------------------------------------------------------------------------------------
// |  !   |  @  |  #  |  $  |  % |  ^  |       |  &  |  * |  (  |  )  |  -  | =  |
// | CTRL |     |     | UP  |    |     |       |  [  |  ]  |    |    |    |      |
// | SHFT |  `  | LEFT| DOWN| RIGHT |  |       |  \  |  +  |    |    |    | RSHIFT |
//                    |   |   | SPC    |       | ENT  |     |  ALT |
                        bindings = <
   &kp EXCL  &kp AT &kp POUND &kp DLLR &kp PRCNT &kp CARET      &kp AMPS &kp STAR  &kp LPAR &kp RPAR  &kp MINUS &kp EQUAL
   &kp LCTRL &none   &none &kp UP   &none   &none                      &kp LBKT &kp RBKT &none &none &none &none
   &kp LSHFT &kp GRAVE  &kp LEFT &kp DOWN   &kp RIGHT   &none    &kp BSLH &kp PLUS  &none &none &none &kp RSHIFT
                             &none &trans   &kp RET                  &kp SPACE   &trans  &kp RALT
                        >;
                };
                raise_layer {
                        label = "RAI";
// -----------------------------------------------------------------------------------------
// | 1     |  2     |  3     |  4     |  5     | 6    |        |   7  |  8  |  9  |   0    |     |  BKSP  |
// |  F1   |  F2   |   F3   |  F4    |  F5    |   F6  |        |  F7    |  F8    |  F9   |  F10    |   F11   |  F12 |
// |CAPS |     |      |      |      |     |        | DEL  |      |      |     |      | RSHFT|
//                    | ESC  |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp N1 &kp N2  &kp N3 &kp N4  &kp N5 &kp N6       &kp N7 &kp N8  &kp N9 &kp N0  &none &kp BSPC
   &kp F1 &kp F2  &kp F3 &kp F4 &kp F5 &kp F6        &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
   &kp CAPS &none &none &none &none &none      &kp DEL  &none  &none &none  &none &kp RSHFT
                &kp ESC  &trans  &kp RET       &kp SPACE  &trans  &kp RALT
                        >;
                };
                adjust_layer {
                        label = "ADJ";
// -----------------------------------------------------------------------------------------
// |   NUM LOCK    |      |      |      |      |      |  |     |     |    |    |    | VOL UP |
// | BT CLR | BT 1 | BT 2 | BT 3 | BT 4 | BT 5 |  |     |     |    |    |    | VOL DN |
// |        |      |      |      |      |      |  |     |     |    |    |    |  MUTE  |
//                        |      |      |      |  |     |     |    |
                        bindings = <
   &kp KP_NUMLOCK &none &none &none &none &none                                         &none &none  &none &none &none &kp C_VOL_UP
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4          &none &none &none &none &none &kp C_VOL_DN
   &none &none   &none &none   &none   &none                                            &none &none  &none &none &none &kp C_MUTE
                            &none &trans   &none                                        &none &trans &none
                        >;
                };
                
        };
};


